import type { MongoClientOptions } from 'mongodb'
import type { ResolvedOptions } from '../../options'
import type { ResolvedMongoOptions } from '../../options/database/mongodb'
import { klona } from 'klona/json'

export function getServerMongodbContents(options: ResolvedOptions) {
  return (): string => {
    const mongoUrl = options?.database?.mongo?.url
    const mongoOptions = klona(options?.database?.mongo) as Partial<ResolvedMongoOptions>
    delete mongoOptions.url
    const mongoClientOptions = mongoOptions as MongoClientOptions

    return `// ! Generated by nuxt-feathers - do not change manually
// For more information about this file see https://dove.feathersjs.com/guides/cli/databases.html

import { MongoClient } from 'mongodb'
import { defineFeathersServerPlugin } from './server'
  
const url = '${mongoUrl}'
const options = ${JSON.stringify(mongoClientOptions, null, 2)}

export default defineFeathersServerPlugin((app) => {
  const database = new URL(url).pathname.substring(1)

  const mongoClient = MongoClient.connect(url, options).then(client => client.db(database))

  app.set('mongodbClient', mongoClient)
})
`
  }
}
